<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAF0aUNDUGljYwAAKM+Vkc8rw2Ecx18bmmyacHBwWBqn0VCLi7Il1NKa
        KcNl+9oPtR/fvt8tyVW5rihx8evAX8BVOStFpCRHZ+LC+vp8bbWlHDxPz+fzet7P8/n0fD4PWCMZJas3
        eiGbK2jhSb9rPrrgsj1jx0krXbTHFF0dD4WC/Dk+7rCY/qbfzMX/hn05oStgaRYeU1StIDwlHFwtqCZv
        C3cq6diy8KmwR5MHCt+aerzCLyanKvxlshYJB6S2NmFXqo7jdayktaywVI47mykq1feYlTgSublZ8T2y
        utEJM4kfF9NMEMDHIKNiffQzxIDs+CPe+xM/Q15iFbEqa2iskCJNAY+oRcmeEJ8UPSEzw5rZ/9991ZPD
        Q5XsDj80PRnGWy/YtqBcMozPQ8MoH0HDI1zkavH5Axh5F71U09z74NyAs8uaFt+B803oelBjWuxHapBl
        TSbh9QRao9BxDS2LlZ5Vzzm+h8i6fNUV7O5Bn9x3Ln0DHNtnxMYjpDwAAAAJcEhZcwAACxMAAAsTAQCa
        nBgAAAAHdElNRQfkAxERDCf6X4o+AAACJUlEQVRYR8WXuy5EQRjHt6HYihAi4TEUbMIjIIROpfUMes9A
        Q+JS025DuU+gFrcSiYS4/X9jZjNmvz2XzeFM8tuczPy/y86Z+WZOI69dt1qBppgV22JftEXHwzN9jKFB
        6+wGbsGBGBOb4lzci3fx1QfG0KDFBtvyiXijYbEkLsWbsAJmgQ22+MCX957TEAoy3xVPwnJeBnzgy81G
        38agZ0qciA9hORwEfOET3y5OT/MDZInQclIFx6J3JugQQ4KpqvKfp+CbGMT6FRyWxaOwDKuEGMRycUPw
        cXEhLIO/gFg/r4IfwZ7N22q34kpk1QGmGA1aazxALGK6BKhaZ8ISBl7EmpgWR+JTpBr6WGQzYlVgk2pi
        iNkkAUon1csSBch4S6CfEGkSIThjaNC+ithHCjFnEVO/s6Y1gMGGSJNIg6+LvD8ExNzGgEPEElhYSUDZ
        4IE9jDjJrMF+xEmMiFH/XDY4tDHkOLUGs2CVzwvsYU7cCEubRWeQBHjnlOtJERLgmXUQL8wiuATKvIJ0
        wa14eI4XpmVr4V5B0UVorfYHj7U7LB8pbhEW3Yanot9qT3cH2tjWorsNixSiZ7EorOCBOIkFgU2qiUHv
        ClGRUkyNPxQ74s73WTCG5kDkHevdUgxFDqMq+XUYQe3HMdRzIYluRfVcyUKjQ9RzKaXR6annWh6aF5Al
        U/V/HyZxQyjq+TQLDQMPmbNn/+/jNG7BgaBiVvx53mh8A3Fem39JsWxFAAAAAElFTkSuQmCC
</value>
  </data>
</root>